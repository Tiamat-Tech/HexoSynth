name: Build

on:
  push:
    branches: [ "master" ]
    tags:
    # Run when pushing version tags, since otherwise it's impossible to
    # restart a successful build after pushing a tag
    - '*.*.*'
  pull_request:
    branches: [ "master" ]

defaults:
  run:
    # This otherwise gets run under dash which does not support brace expansion
    shell: bash

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libgl-dev libxcb1-dev libxcb-icccm4-dev libxcursor-dev libxkbcommon-dev libxcb-shape0-dev libxcb-xfixes0-dev libgl1-mesa-dev libjack-jackd2-dev libx11-xcb-dev libxcb-dri2-0-dev libxcb-dri3-dev
    - uses: actions/cache@v2
      with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.name }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Setup Rust
      run: |
        rustup update nightly --no-self-update
        rustup default nightly
        rustup component add rustfmt
    - name: Run fmt
      run: cargo +nightly fmt --all -- --check
    - name: Run fmt hexosynth
      working-directory: hexosynth
      run: cargo +nightly fmt --all -- --check
    - name: Build
      run: cargo +nightly xtask bundle hexosynth_plug --release --verbose
    - name: Determine build VST3 archive name
      run: |
          echo "ARCHIVE_NAME_VST3=hexosynth-vst3-linux-$(git describe --always)" >> "$GITHUB_ENV"
    - name: Determine build CLAP archive name
      run: |
          echo "ARCHIVE_NAME_CLAP=hexosynth-clap-linux-$(git describe --always)" >> "$GITHUB_ENV"
    - name: Determine build Standalone archive name
      run: |
          echo "ARCHIVE_NAME_STANDALONE=hexosynth-standalone-linux-$(git describe --always)" >> "$GITHUB_ENV"
    - name: Determine build Jack Standalone archive name
      run: |
          echo "ARCHIVE_NAME_JACK_STANDALONE=hexosynth-standalone-jack-linux-$(git describe --always)" >> "$GITHUB_ENV"
    - name: Determine build CPAL Standalone archive name
      run: |
          echo "ARCHIVE_NAME_CPAL_STANDALONE=hexosynth-standalone-cpal-linux-$(git describe --always)" >> "$GITHUB_ENV"
    - name: Package
      run: |
          mkdir -p "$ARCHIVE_NAME_VST3/$ARCHIVE_NAME_VST3"
          mkdir -p "$ARCHIVE_NAME_CLAP/$ARCHIVE_NAME_CLAP"
          mkdir -p "$ARCHIVE_NAME_STANDALONE/$ARCHIVE_NAME_STANDALONE"
          mkdir -p "$ARCHIVE_NAME_CPAL_STANDALONE/$ARCHIVE_NAME_CPAL_STANDALONE"
          mkdir -p "$ARCHIVE_NAME_JACK_STANDALONE/$ARCHIVE_NAME_JACK_STANDALONE"
          mv target/bundled/hexosynth_plug.vst3 "$ARCHIVE_NAME_VST3/$ARCHIVE_NAME_VST3"
          mv target/bundled/hexosynth_plug.clap "$ARCHIVE_NAME_CLAP/$ARCHIVE_NAME_CLAP"
          mv target/bundled/hexosynth_plug "$ARCHIVE_NAME_STANDALONE/$ARCHIVE_NAME_STANDALONE"
          mv target/bundled/hexosynth_jack "$ARCHIVE_NAME_JACK_STANDALONE/$ARCHIVE_NAME_JACK_STANDALONE"
          mv target/bundled/hexosynth_cpal "$ARCHIVE_NAME_CPAL_STANDALONE/$ARCHIVE_NAME_CPAL_STANDALONE"
    - uses: actions/upload-artifact@v2
      with:
          name: ${{ env.ARCHIVE_NAME_VST3 }}
          path: ${{ env.ARCHIVE_NAME_VST3 }}
    - uses: actions/upload-artifact@v2
      with:
          name: ${{ env.ARCHIVE_NAME_CLAP }}
          path: ${{ env.ARCHIVE_NAME_CLAP }}
    - uses: actions/upload-artifact@v2
      with:
          name: ${{ env.ARCHIVE_NAME_STANDALONE }}
          path: ${{ env.ARCHIVE_NAME_STANDALONE }}
    - uses: actions/upload-artifact@v2
      with:
          name: ${{ env.ARCHIVE_NAME_JACK_STANDALONE }}
          path: ${{ env.ARCHIVE_NAME_JACK_STANDALONE }}
    - uses: actions/upload-artifact@v2
      with:
          name: ${{ env.ARCHIVE_NAME_CPAL_STANDALONE }}
          path: ${{ env.ARCHIVE_NAME_CPAL_STANDALONE }}
